# -*- coding: utf-8 -*-
"""utils.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1fNY7rq9yd0Z2D9LKCyMpD6gkV6Rwrsjf
"""

from torch_scatter import scatter
import torch_scatter
import torch

def mean_flat_graph(tensor, batch):
    """
    Take the mean over all non-batch dimensions for graph data.

    Args:
        tensor (torch.Tensor): Node or edge features of shape [num_nodes, feature_dim].
        batch (torch.Tensor): Batch vector of shape [num_nodes], associating elements to graphs.

    Returns:
        torch.Tensor: Mean value per graph, shape [num_graphs].
    """
    # Aggregate sum per graph using the batch index
    sum_per_graph = torch_scatter.scatter(tensor.sum(dim=-1), batch, dim=0, reduce="sum")

    # Count elements per graph
    count_per_graph = torch_scatter.scatter(torch.ones_like(tensor[:, 0]), batch, dim=0, reduce="sum")

    # Compute mean per graph
    mean_per_graph = sum_per_graph / count_per_graph
    return mean_per_graph